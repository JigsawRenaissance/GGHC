/*****************************************************************************
* Model: Jigbox.qm
* File:  ../../firmware/qm_code/audioPlayer.h
*
* This file has been generated automatically by QP Modeler (QM).
* DO NOT EDIT THIS FILE MANUALLY.
*
* Please visit www.state-machine.com/qm for more information.
*****************************************************************************/
#include "qp_port.h"

enum
{
    TIMEOUT_SIG = USER_SIG,
    EV_START_NOTE_SIG,
    EV_NOTE_DONE_SIG,
} AudioPlayerSignal;

/* $(Events::EV_NOTE_DONE) .................................................*/
typedef struct EV_NOTE_DONETag {
/* protected: */
    QEvent super;

/* public: */
    Note* note;
} EV_NOTE_DONE;


/* $(Events::EV_START_NOTE) ................................................*/
typedef struct EV_START_NOTETag {
/* protected: */
    QEvent super;

/* public: */
    Note* note;
} EV_START_NOTE;


/* $(AOs::AudioPlayer) .....................................................*/
typedef struct AudioPlayerTag {
/* protected: */
    QActive super;

/* public: */

/* protected: */
    QTimeEvt timeEvt;

/* public: */
    int8_t activeNotes;
} AudioPlayer;

/* public: */
bool AudioPlayer_startPlaying(AudioPlayer *me);
extern Note[6] AudioPlayer_channels;

/* protected: */
QState AudioPlayer_initial(AudioPlayer *me, QEvent const *e);
QState AudioPlayer_idle(AudioPlayer *me, QEvent const *e);
QState AudioPlayer_playing(AudioPlayer *me, QEvent const *e);


/* define some other functions */
